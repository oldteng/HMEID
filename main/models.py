from django.db import models

# Create your models here.
class Sites(models.Model):
    site_name = models.CharField(max_length=100, primary_key=True)
    site_type = models.CharField(max_length=10, db_index=True)
    chrom = models.CharField(max_length=10, db_index=True)
    position = models.PositiveIntegerField(db_index=True)
    strand = models.CharField(max_length=5)
    site_length = models.PositiveIntegerField(db_index=True,null=True)
    subfamily = models.CharField(max_length=20,db_index=True,null=True)
    gene = models.CharField(max_length=50,db_index=True,null=True)
    ensembl = models.CharField(max_length=20,db_index=True,null=True)
    consequence = models.CharField(max_length=50,db_index=True,null=True)
    assess = models.PositiveIntegerField()
    sr = models.PositiveIntegerField()
    lp = models.PositiveIntegerField()
    rp = models.PositiveIntegerField()
    insert_site = models.CharField(max_length=50)
    istp = models.IntegerField(null=True)
    Total_AC = models.PositiveIntegerField()
    Total_AN = models.PositiveIntegerField()
    Total_AF = models.FloatField()
    KGP_AC = models.PositiveIntegerField()
    KGP_AN = models.PositiveIntegerField()
    KGP_AF = models.FloatField()
    CN3270_AC = models.PositiveIntegerField()
    CN3270_AN = models.PositiveIntegerField()
    CN3270_AF = models.FloatField()
    AFR_AC = models.PositiveIntegerField()
    AFR_AN = models.PositiveIntegerField()
    AFR_AF = models.FloatField()
    AMR_AC = models.PositiveIntegerField()
    AMR_AN = models.PositiveIntegerField()
    AMR_AF = models.FloatField()
    EAS_AC = models.PositiveIntegerField()
    EAS_AN = models.PositiveIntegerField()
    EAS_AF = models.FloatField()
    EAS_1KGP_AC = models.PositiveIntegerField()
    EAS_1KGP_AN = models.PositiveIntegerField()
    EAS_1KGP_AF = models.FloatField()
    EUR_AC = models.PositiveIntegerField()
    EUR_AN = models.PositiveIntegerField()
    EUR_AF = models.FloatField()
    SAS_AC = models.PositiveIntegerField()
    SAS_AN = models.PositiveIntegerField()
    SAS_AF = models.FloatField()
    CHB_and_CHS_1KGP_AC = models.PositiveIntegerField()
    CHB_and_CHS_1KGP_AN = models.PositiveIntegerField()
    CHB_and_CHS_1KGP_AF = models.FloatField()
    CHB_AC = models.PositiveIntegerField()
    CHB_AN = models.PositiveIntegerField()
    CHB_AF = models.FloatField()
    CHS_1KGP_AC = models.PositiveIntegerField()
    CHS_1KGP_AN = models.PositiveIntegerField()
    CHS_1KGP_AF = models.FloatField()
    CDX_AC = models.PositiveIntegerField()
    CDX_AN = models.PositiveIntegerField()
    CDX_AF = models.FloatField()
    CHN_AC = models.PositiveIntegerField()
    CHN_AN = models.PositiveIntegerField()
    CHN_AF = models.FloatField()
    CHS_AC = models.PositiveIntegerField()
    CHS_AN = models.PositiveIntegerField()
    CHS_AF = models.FloatField()
    JPT_AC = models.PositiveIntegerField()
    JPT_AN = models.PositiveIntegerField()
    JPT_AF = models.FloatField()
    KHV_AC = models.PositiveIntegerField()
    KHV_AN = models.PositiveIntegerField()
    KHV_AF = models.FloatField()
class LD_SNP(models.Model):
    ass_id = models.CharField(max_length=20, primary_key=True)
    site_name = models.CharField(max_length=100, db_index=True)
    snp_id = models.CharField(max_length=50, db_index=True)
    disease = models.CharField(max_length=1000, db_index=True)
    pvalue = models.FloatField()
